plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jreleaser' version '1.14.0'
}


group 'de.brifle'
version '0.1.2'


java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'de.brifle'
            artifactId = 'brifle-sdk-java'
            version = '0.1.2'

            from components.java

            pom {
                name = 'brifle-sdk-java'
                description = 'Brifle Java SDK'
                url = 'https://github.com/brifle-de/brifle-sdk-java'
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'MIT'
                    }
                }
                developers {
                    developer {
                        id = 'brifle'
                        name = 'Brifle GmbH'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/brifle-de/brifle-sdk-java.git'
                    developerConnection = 'scm:git:ssh://github.com/brifle-de/brifle-sdk-java.git'
                    url = 'https://github.com/brifle-de/brifle-sdk-java'
                    tag = 'v${version}'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.12.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
}


def loadProperties() {
    def properties = new Properties()
    def localPropertiesFile = file('env.properties')
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withInputStream { stream ->
            properties.load(stream)
        }
    }
    return properties
}

// Load properties from gradle.properties
def properties = loadProperties()

test {
    useJUnitPlatform()
    // Set environment variables for the test task
    properties.each { key, value ->
        systemProperty key, value
    }
}

jreleaser {
    environment {
        variables = 'jrelease.toml'
    }
    signing {
        active = 'ALWAYS'
        armored = true
    }
    assemble {
        active = 'ALWAYS'
    }

    project {
        name = 'Brifle Java SDK'
        version = '0.1.2'
        description = 'Brifle Java SDK'
        copyright = 'Copyright Â© 2024 Brifle GmbH'
    }



    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')

                    //    releaseRepository = false
                }
            }
        }
    }
}

task createStagingDir {
    doLast {
        def stagingDir = file("$buildDir/staging-deploy")
        if (!stagingDir.exists()) {
            stagingDir.mkdirs()
            println "Created staging-deploy directory at: ${stagingDir.absolutePath}"
        }
    }
}

// Ensure this task runs before deployment
jreleaserFullRelease.dependsOn createStagingDir